resource来源
https://blog.csdn.net/weixin_45895555/article/details/109906607

下载二进制包
sudo apt-get install gnupg
或
yum install gnupg

如果安装成功则会有显示GPG帮助
gpg --help

使用 gen-ken 参数生成自己的密钥。
gpg --gen-key


会跳出
/*
gpg (GnuPG) 1.4.12; Copyright (C) 2012 Free Software Foundation, Inc.

This is free software: you are free to change and redistribute it.

There is NO WARRANTY, to the extent permitted by law.

请选择您要使用的密钥种类：

(1) RSA and RSA (default)

(2) DSA and Elgamal

(3) DSA (仅用于签名)

(4) RSA (仅用于签名)

您的选择？
*/

默认是一

/*
请设定这把密钥的有效期限。

0 = 密钥永不过期

<n> = 密钥在 n 天后过期

<n>w = 密钥在 n 周后过期

<n>m = 密钥在 n 月后过期

<n>y = 密钥在 n 年后过期

密钥的有效期限是？(0)
*/

个人信息
/*
您需要一个用户标识来辨识您的密钥；本软件会用真实姓名、注释和电子邮件地址组合成用户标识，如下所示：

"Heinrich Heine (Der Dichter) <heinrichh@duesseldorf.de>"

真实姓名：

电子邮件地址：

注释：
*/

生成个人密钥
/*
您需要一个密码来保护您的私钥：

我们需要生成大量的随机字节。这个时候您可以多做些琐事(像是敲打键盘、移动鼠标、读写硬盘之类的)，这会让随机数字发生器有更好的机会获得足够的熵数。

gpg: 密钥 EDDD6D76 被标记为绝对信任
公钥和私钥已经生成并经签名。
*/

生成撤销证书，用来撤销公钥
/*
gpg --gen-revoke [用户 ID]
*/


列出密钥
gpg --list-keys

删除密钥
gpg --delete-key [用户 ID]


输出密钥

二进制储存
gpg --armor --output public-key.txt --export [用户 ID]
txt文件储存
gpg --armor --output private-key.txt --export-secret-keys
private-key.txt为可改名

上传共钥
gpg --send-keys [用户 ID] --keyserver hkp://subkeys.pgp.net

由于公钥服务器没有检查机制，任何人都可以用你的名义上传公钥，所以没有办法保证服务器上的公钥的可靠性。、
通常，你可以在网站上公布一个公钥指纹，让其他人核对下载到的公钥是否为真。fingerprint 参数生成公钥指纹。

gpg --fingerprint [用户 ID]

输入密钥
gpg --import [密钥文件]

获取公钥
gpg --keyserver hkp://subkeys.pgp.net --search-keys [用户 ID]


加密demo.txt
gpg --recipient [用户 ID] --output demo.en.txt --encrypt demo.txt


解密
gpg --decrypt demo.en.txt --output demo.de.txt


签名
gpg --sign demo.txt

 签名+加密 同时
 gpg --local-user [发信者 ID] --recipient [接收者 ID] --armor --sign --encrypt demo.txt


验证签名
gpg --verify demo.txt.asc demo.txt